//- atualizar_aluno.pug
extends includes/layout.pug

block content
    section
        h1.welcome-message ATUALIZAR DADOS DO ALUNO

        div.action__bar
            button.action__button(onclick="window.print()") Imprimir

        form.login-form(action="http://127.0.0.1:3000/persistir_aluno/atualizar" method="post")

            - var aluno = aluno[0] // pega o primeiro rowDataPacket
            - var c
            - console.log(aluno);
            - data = aluno.data_nascimento
            //- coloca a data no formato yyyy-MM-dd
            - data = data.getFullYear()+'-' + ('0'+(data.getMonth()+1)).slice(-2) + '-'+ ('0'+data.getDate()).slice(-2)
            - console.log("Data: "+ data)

            each cidade in cidades
                if aluno.cidade_id == cidade.id
                    - c = cidade // armazena a cidade do aluno

            input(name="id" value=aluno.id hidden)
            
            label(for="nome") Nome: 
            input(id="nome" type="text" name="nome" value=aluno.nome required)
            label(for="rg") RG: 
            input(id="rg" type="number" name="rg" value=aluno.rg placeholder="apenas números" max="99999999999")
            label(for="cpf") CPF: 
            input(id="cpf" type="number" name="cpf" value=aluno.cpf placeholder="apenas números" max="99999999999" required)
            label(for="endereco") Endereço: 
            input(id="endereco" type="text" name="endereco" value=aluno.endereco required)
            label(for="bairro") Bairro: 
            input(id="bairro" type="text" name="bairro" value=aluno.bairro)

            label(for="uf") UF: 
            select(id="uf" name="uf" onchange="atualizarCidades('atualizar')" required)
                each estado in estados
                    if estado.id == c.id_estado
                        option(value=estado.id selected) #{estado.uf}
                    else
                        option(value=estado.id) #{estado.uf}

            label(for="cidade") Cidade:
            select(id="cidade" name="cidade" size="1" required)
                option(disabled)
                each cidade in cidades
                    if aluno.cidade_id == cidade.id
                        option(value=cidade.id class=cidade.id_estado selected) #{cidade.nome}  
                    else
                        option(value=cidade.id class=cidade.id_estado) #{cidade.nome}  

            label(for="cep") CEP: 
            input(id="cep" type="text" name="cep" value=aluno.cep)
            label(for="telefone") Telefone: 
            input(id="telefone" type="number" name="telefone" value=aluno.telefone min="11111111111" max="99999999999" placeholder="apenas números - com DDD" required)
            label(for="email") E-mail: 
            input(id="email" type="email" name="email" value=aluno.email)
            
            label(for="data_nascimento") Data de Nascimento:
            input(id="data_nascimento" type="date" name="data_nascimento" value=data required)
            
            label(for="sexo") Sexo: 
            select(id="sexo" name="sexo" required)
                option(value="M") Masculino 
                option(value="F") Feminino

            label(for="profissao") Profissão: 
            input(id="profissao" type="text" name="profissao" value=aluno.profissao)
            label(for="escolaridade") Escolaridade: 
            select(id="escolaridade" name="escolaridade" value=aluno.escolaridade required)
                option(value="Fundamental Incompleto") Fundamental incompleto 
                option(value="Fundamental") Fundamental completo
                option(value="Médio") Médio completo
                option(value="Superior") Superior completo
                option(value="Especialização") Especialização
                option(value="Mestrado") Mestrado
                option(value="Doutorado") Doutorado

            label(for="estado_civil") Estado Civil: 
            select(id="estado_civil" name="estado_civil" value=aluno.estado_civil required)
                option(value="Solteiro") Solteiro(a) 
                option(value="Casado") Casado(a)
                option(value="Divorciado") Divorciado(a)
                option(value="Viúvo") Viúvo(a)

            label(for="mora_sozinho") Mora Sozinho(a)? 
            select(id="mora_sozinho" name="mora_sozinho" value=aluno.mora_sozinho required)
                option(value=1) Sim 
                option(value=0) Não

            label(for="tem_transporte") Tem transporte para o local? 
            select(id="tem_transporte" name="tem_transporte" value=aluno.tem_transporte required)
                option(value=1) Sim 
                option(value=0) Não

            label(for="pessoa_para_contato") Pessoa para contato: 
            input(id="pessoa_para_contato" type="text" name="pessoa_para_contato" value=aluno.pessoa_para_contato)
            label(for="fone_do_contato") Telefone do contato: 
            input(id="fone_do_contato" type="number" name="fone_do_contato" value=aluno.fone_do_contato min="11111111111" max="99999999999" placeholder="apenas números - com DDD")

            input.button(type="submit" value="Atualizar")        

            - var msg = mensagem
            - console.log(msg)
            if msg != ''
                div.message-container  
                    p= msg
                    p.message__close-icon(onclick="messageOff()") X
                script.
                    // escurece o fundo da página para dar ênfase à mensagem
                    - document.querySelector(".container").classList.add("message-on");

    script. 
        atualizarCidades();
        console.log("olá");
        var sexo = document.getElementById("sexo");
        var escolaridade = document.getElementById("escolaridade");
        var estado_civil = document.getElementById("estado_civil");
        var mora_sozinho = document.getElementById("mora_sozinho");
        var tem_transporte = document.getElementById("tem_transporte");
        
        console.log("#{aluno.escolaridade}");

        //- pré-seleciona a opção do select com base no objeto aluno
        if ("#{aluno.sexo}" == "M") {
            sexo.selectedIndex = "0";
        } else if ("#{aluno.sexo}" == "F") {
            sexo.selectedIndex = "1";
        }

        if ("#{aluno.escolaridade}" == "Fundamental Incompleto") {
            escolaridade.selectedIndex = "0";
        } else if ("#{aluno.escolaridade}" == "Fundamental") {
            escolaridade.selectedIndex = "1";
        } else if ("#{aluno.escolaridade}" == "Médio") {
            escolaridade.selectedIndex = "2";
        } else if ("#{aluno.escolaridade}" == "Superior") {
            escolaridade.selectedIndex = "3";
        } else if ("#{aluno.escolaridade}" == "Especialização") {
            escolaridade.selectedIndex = "4";
        } else if ("#{aluno.escolaridade}" == "Mestrado") {
            escolaridade.selectedIndex = "5";
        } else if ("#{aluno.escolaridade}" == "Doutorado") {
            escolaridade.selectedIndex = "6";
        }

        if ("#{aluno.estado_civil}" == "Solteiro") {
            estado_civil.selectedIndex = "0";
        } else if ("#{aluno.estado_civil}" == "Casado") {
            estado_civil.selectedIndex = "1";
        } else if ("#{aluno.estado_civil}" == "Divorciado") {
            estado_civil.selectedIndex = "2";
        } else if ("#{aluno.estado_civil}" == "Viúvo") {
            estado_civil.selectedIndex = "3";
        }

        if (#{aluno.mora_sozinho} == 1) {
            mora_sozinho.selectedIndex = "0";
        } else {
            mora_sozinho.selectedIndex = "1";
        }

        if (#{aluno.tem_transporte} == 1) {
            tem_transporte.selectedIndex = "0";
        } else {
            tem_transporte.selectedIndex = "1";
        }